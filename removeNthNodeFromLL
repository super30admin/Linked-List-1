/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    
    //19. Remove Nth Node From End of List
    //Time complexity is: O(n)
    //Space compelxity : O(1)
    public ListNode removeNthFromEnd(ListNode head, int n) {
        
        if(head == null)
            return head;
        
        
        ListNode dummy = new ListNode(-1);
         dummy.next = head;
        ListNode start = dummy;
        ListNode end = dummy;
        int count =0;
        
        while(count<=n){
            end = end.next;
            count++;
        }
        
        while(end!=null){
            start = start.next;
            end = end.next;
        }
        start.next = start.next.next;
        
        return dummy.next;
    }
}