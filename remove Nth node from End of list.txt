# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
#1
# take value from the root and append into list 
# len(list)-n is the element i need to remove 
# remove it and get the new linkedlist [TC-O(N),SC-O(N)]

#2 count=5 
#count the element in linkedlist go untill count-n , then your next will be next's next.

#3 

class Solution:
    def removeNthFromEnd(self, head: Optional[ListNode], n: int) -> Optional[ListNode]:
        if head is None:
            return head
        dummy=ListNode(-1)
        dummy.next=head
        slow=dummy
        fast=dummy
        count=0
        while count<=n:
            fast=fast.next
            count=count+1
        while fast!=None:
            slow=slow.next
            fast=fast.next
        slow.next=slow.next.next
        return dummy.next