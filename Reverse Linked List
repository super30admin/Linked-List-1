/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    //Time Complexity-->O(n)
    // Space Complexity -->O(1)
    ListNode* reverseList(ListNode* head) {
        ListNode * first = head;
        ListNode * second;
        ListNode * third = NULL;
        if(head == NULL ||  head->next ==NULL){
           return head;
        }
        while(first!= NULL){
        second = first;
        first = first->next;
        second->next = third;
        third = second;
        }
        head = second;
        return head;
    }
};
