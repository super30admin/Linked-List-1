/**
* Definition for singly-linked list.
* struct ListNode {
*     int val;
*     ListNode *next;
*     ListNode() : val(0), next(nullptr) {}
*     ListNode(int x) : val(x), next(nullptr) {}
*     ListNode(int x, ListNode *next) : val(x), next(next) {}
* };
*/
//T : O(n)
//S : O(1)
class Solution {
public:
   ListNode* removeNthFromEnd(ListNode* head, int n) {
       ListNode* curr = head;
       ListNode* res = head;
       int cnt = 0; int i = 0;
       while(curr){
           cnt++;
           curr = curr->next;
       }
       cnt = (cnt>n)?(cnt-n):0;
       ListNode* prev = nullptr;
       while(head && i<cnt){
           i++;
           prev = head;
           head = head->next;
       }
       if(prev)
           prev->next = head->next;
       else
           res = head->next;
       return res;
   }
};