142. Linked List Cycle II
 
//TC =O(n) SC=O(1)
public class Solution {
    public ListNode detectCycle(ListNode head) {
        if(head==null)return null;
        
        ListNode slow=head;
        ListNode fast=head;
        while(fast!=null && slow!=null){
            slow=slow.next;
            fast=fast.next;
            if(fast!=null){
            fast=fast.next;
            }
            if(fast==slow){
                break;
            }
        }
        slow=head;
        
        if(fast==null){
            return null;
        }   
        
        while(slow!=fast){
            fast=fast.next;
            slow=slow.next;
        }
        return slow;
        
    }
}