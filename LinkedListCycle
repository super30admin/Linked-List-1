/*
TC: O(N)
SC: O(1)
 */

class LinkedListCycle{
    public ListNode detectCycle(ListNode head) {
        if (head == null || head.next == null) return null;

        ListNode slow = head;
        ListNode fast = head;
        boolean atSame = false;

        while(fast!=null && fast.next.next !=null){
            slow = slow.next;
            fast = fast.next.next;

            if (slow == fast){
                atSame = true;
                break;
            }
        }

        if (!atSame){
            return null;
        }
        slow = head;

        while(slow!=fast){
            fast = fast.next;
            slow = slow.next;
        }
        return slow;
    }
}