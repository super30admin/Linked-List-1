// Time Complexity : O(n)
// Space Complexity : O(1)
// Did this code successfully run on Leetcode : yes
// Any problem you faced while coding this : no


// Your code here along with comments explaining your approach

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        
        ListNode dummy = new ListNode(-1, head);
               ListNode p1=dummy;
        ListNode p2=dummy;
        for(int i=0; i<2; i++){
            p2=p2.next;
            System.out.println(p2.val);
        }
        
        while(p2.next!=null){
            p2=p2.next;
            p1=p1.next;
        }
        p1.next=p1.next.next;
        return dummy.next;
    }
}