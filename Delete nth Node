/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        //dummynode add it 
        ListNode prev = new ListNode(-1,head); 
        
        ListNode p1 = prev; 
        ListNode p2 = prev;
        
        while(n>0){ //traverse  n element
            p2=p2.next;
            n--;
        }
        
        while(p2.next!=null){ // travese length-num of elements n 
            p1=p1.next;
            p2=p2.next;
        }
        
        //delete the dummy node
        
        p1.next=p1.next.next;
        return prev.next; // head 
    }
    
}

//Time : O(n) --  n+ length-n --> length n ==O(n)
//Space : O(1) constant space
