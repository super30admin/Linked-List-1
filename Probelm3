/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode detectCycle(ListNode head) {
        ListNode slow = head;
        ListNode fast = head; // diff between slow and fast is 2
        
        while(fast != null && fast.next !=null){
            slow= slow.next; // incr by 1
            fast= fast.next.next; // incr by 2
            
            // found cycle 
            if (slow == fast){
                ListNode dummy = head;
                
                while(dummy != slow){
                    slow = slow.next;
                    dummy = dummy.next;
                }
                
                return slow; // can also return dummy
            }
        }
        return null;
    }
} // TC O(n) , SC O(1)
